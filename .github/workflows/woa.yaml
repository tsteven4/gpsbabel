name: "woa"
permissions: {}

on:
  workflow_dispatch: ~

jobs:

  windows:
    name: woa native Build
    permissions:
      id-token: write
      contents: write
      attestations: write
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - QT_VERSION: '6.8.3'
            TARGET_ARCH: 'arm64'
            HOST_ARCH: 'arm64'
            COMPILER: 'msvc2022_arm64'
            METHOD: 'aqt'
            RELEASE: true
            os: windows-2025

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Qt setup(aqt)
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Qt
      env:
        CI_BUILD_DIR: ${{ github.workspace }}
      shell: bash
      run: |
        if [ -n "${{ matrix.CROSS_COMPILER }}" ]; then
          ./tools/ci_install_windows.sh "${{ matrix.QT_VERSION }}" "${{ matrix.COMPILER }}" "${{ matrix.METHOD }}" "${{ matrix.CROSS_COMPILER }}"
        else
          ./tools/ci_install_windows.sh "${{ matrix.QT_VERSION }}" "${{ matrix.COMPILER }}" "${{ matrix.METHOD }}"
        fi
        echo "QT_DIR=${HOME}/Cache/Qt/${{ matrix.QT_VERSION }}/${{ matrix.COMPILER }}" >> "$GITHUB_ENV"

    - uses: jfrog/setup-jfrog-cli@v4
      env:
        # JFrog Platform url
        JF_URL: 'https://gpsbabel.jfrog.io'

        # JFrog Platform access token
        JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
    - run: |
        jf rt ping
        jf rt u "${QT_DIR}" qt-images-local/windows_arm64-${{ matrix.QT_VERSION }}-${{ matrix.COMPILER }}.zip --archive zip
