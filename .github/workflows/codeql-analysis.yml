# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL Advanced"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '27 4 * * 2'
  workflow_dispatch: ~

jobs:
  analyze:
    name: Analyze (${{ matrix.runs-on }},${{ matrix.language }})
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners (GitHub.com only)
    # Consider using larger runners or machines with greater resources for possible analysis time improvements.
    runs-on: ${{ matrix.runs-on }}
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read
    container:
      image: ${{ matrix.image || '' }}
      env:
        CMAKE_GENERATOR: Ninja

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: c-cpp
            build-mode: autobuild
            image: gpsbabel-docker.jfrog.io/tsteven4/gpsbabel_build_environment_noble
            runs-on: ubuntu-latest
          - language: c-cpp
            build-mode: manual
            runs-on: windows-latest
            QT_VERSION: '6.5.3'
            ARCH: 'amd64'
            HOST_ARCH: 'amd64'
            COMPILER: 'msvc2019_64'
            GENERATOR: 'Ninja'
          - language: c-cpp
            build-mode: manual
            runs-on: macos-latest
            QT_VERSION: '6.5.3'
            XCODE_VERSION: '15.4'
            GENERATOR: 'Ninja'
        # CodeQL supports the following values keywords for 'language': 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift'
        # Use `c-cpp` to analyze code written in C, C++ or both
        # Use 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # To learn more about changing the languages that are analyzed or customizing the build mode for your analysis,
        # see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning.
        # If you are analyzing a compiled language, you can modify the 'build-mode' for that language to customize how
        # your codebase is analyzed, see https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/codeql-code-scanning-for-compiled-languages
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        config-file: ./.github/codeql-config.yml
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

    # If the analyze step fails for one of the languages you are analyzing with
    # "We were unable to automatically build your code", modify the matrix above
    # to set the build mode to "manual" for that language. Then modify this step
    # to build your code.
    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun
    - name: Cache Qt
      if: (matrix.build-mode == 'manual')
      uses: actions/cache@v4
      id: cache
      with:
        path: ~/Cache
        key: ${{ runner.os == 'Windows' && ${{ runner.os }}-${{ matrix.QT_VERSION }}-${{ matrix.COMPILER }}-${{ secrets.CACHE_VERSION }} || ${{ runner.os }}-${{ matrix.QT_VERSION }}-${{ secrets.CACHE_VERSION }} }}

    - name: Install Qt setup(aqt)
      if: (matrix.build-mode == 'manual') && (!steps.cache.outputs.cache-hit)
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Qt
      if: (matrix.build-mode == 'manual') && (!steps.cache.outputs.cache-hit)
      env:
        CI_BUILD_DIR: ${{ github.workspace }}
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          ./tools/ci_install_windows.sh "${{ matrix.QT_VERSION }}" "${{ matrix.COMPILER }}" aqt
        elif [ "$RUNNER_OS" == "macOS" ]; then
          ./tools/ci_install_osx.sh ${{ matrix.QT_VERSION }} aqt
        fi

    - name: Build (Windows)
      if: (matrix.build-mode == 'manual') && (runner.os == 'Windows')
      run: |
        .\tools\ci_setup_windows.ps1 -qtdir "$Home\Cache\Qt\${{ matrix.QT_VERSION }}\${{ matrix.COMPILER }}" -arch "${{ matrix.ARCH }}" -host_arch "${{ matrix.HOST_ARCH }}" -vcversion "${{ matrix.VCVERSION }}"
        .\tools\ci_script_windows.ps1 -generator "${{ matrix.GENERATOR }}" -arch "${{ matrix.ARCH }}" -toolset "${{ matrix.TOOLSET }}"

    - name: Build (macOS)
      if: (matrix.build-mode == 'manual') && (runner.os == 'macOS')
      run: |
        source ${HOME}/Cache/qt-${{ matrix.QT_VERSION }}.env
        sudo xcode-select --switch /Applications/Xcode_${{ matrix.XCODE_VERSION }}.app
        ./tools/ci_script_osx.sh . ${{ matrix.QT_VERSION }} ${{ matrix.GENERATOR }}

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
